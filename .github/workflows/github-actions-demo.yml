name: Sync Languages and Upload Translation Files

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up curl and jq
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq

    - name: Fetch current languages from PoEditor
      env:
        API_TOKEN: ${{ secrets.POEDITOR_API_TOKEN }}  # Reference to the secret API token
        PROJECT_ID: ${{ secrets.POEDITOR_PROJECT_ID }}  # Reference to the secret project ID
      run: |
        echo "Fetching current languages from PoEditor..."
        current_languages=$(curl -s -X POST https://api.poeditor.com/v2/languages/list \
          -d api_token="$API_TOKEN" \
          -d id="$PROJECT_ID" | jq -r '.result.languages[].code')

        # Normalize current_languages by trimming spaces and line breaks
        current_languages=($current_languages)  # Convert string into array for comparison

        # Debugging output for current languages (code only)
        echo "Current languages fetched from PoEditor:"
        for lang in "${current_languages[@]}"; do
          echo "$lang"
        done

    - name: Add Missing Languages from Repo to PoEditor
      env:
        API_TOKEN: ${{ secrets.POEDITOR_API_TOKEN }}
        PROJECT_ID: ${{ secrets.POEDITOR_PROJECT_ID }}
      run: |
        echo "Syncing languages with the repository..."

        # Get the list of language directories in i18n/ (e.g., en, es, fr)
        repo_languages=$(ls -d i18n/*/ | sed 's#i18n/##;s#/##')

        # Debugging output for repository languages (code only)
        echo "Languages found in the repository (i18n/):"
        for lang in $repo_languages; do
          echo "$lang"
        done

        # Add languages that are in the repo but not in PoEditor
        for lang in $repo_languages; do
          # Check if the language is already in the list of current languages from PoEditor
          language_exists=false
          
          # Iterate over current languages and check if this language exists
          for current_lang in "${current_languages[@]}"; do
            if [[ "$current_lang" == "$lang" ]]; then
              language_exists=true
              break
            fi
          done

          if [[ "$language_exists" == false ]]; then
            echo "Adding language: $lang to PoEditor"
            response=$(curl -s -X POST https://api.poeditor.com/v2/languages/add \
              -d api_token="$API_TOKEN" \
              -d id="$PROJECT_ID" \
              -d language="$lang")
            echo "Add language response: $response"
          else
            echo "Language $lang already exists in PoEditor, skipping..."
          fi
        done

    - name: Upload Translation Files
      env:
        API_TOKEN: ${{ secrets.POEDITOR_API_TOKEN }}  # Reference to the secret API token
        PROJECT_ID: ${{ secrets.POEDITOR_PROJECT_ID }}  # Reference to the secret project ID
      run: |
        echo "Uploading translation files for each language..."

        # Iterate over all language directories and upload terms/translation files
        for lang_dir in i18n/*; do
          if [[ -d "$lang_dir" ]]; then
            lang_code=$(basename "$lang_dir")
            echo "Uploading terms/translation files for language: $lang_code"

            # Iterate over all files in the language directory
            for file in "$lang_dir"/*; do
              if [[ -f "$file" ]]; then
                echo "Uploading file: $file for language: $lang_code"
                response=$(curl -s -X POST https://api.poeditor.com/v2/projects/upload \
                  -F api_token="$API_TOKEN" \
                  -F id="$PROJECT_ID" \
                  -F updating="terms_translations" \
                  -F file=@"$file" \
                  -F language="$lang_code")
                echo "Upload response: $response"
                # Sleep for 20 seconds to avoid hitting the API rate limit
                echo "Sleeping for 20 seconds to avoid rate limit..."
                sleep 20
              fi
            done
          fi
        done
